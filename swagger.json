{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Connections API",
    "description": "Connections API for request to backend taskPro",
    "license": {
      "name": "URL to repository",
      "url": "https://github.com/Midland707/task-pro-node-backend"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://task-pro-backend-j82b.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
        {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Boards",
      "description": "User boards endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
         "tags": ["Auth"], 
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
    "post": {
         "tags": ["Auth"], 
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
    "post": {
         "tags": ["Auth"], 
        "summary": "User logout",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
    "get": {
         "tags": ["User"], 
        "summary": "Get current user info",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserResponse"
              }
            }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/theme": {
    "patch": {
         "tags": ["User"], 
        "summary": "Update user`s theme",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeUserResponse"
              }
            }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/boards": {
    "get": {
         "tags": ["Boards"], 
        "summary": "Getting user`s boards",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetBoardsResponse"
              }
            }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/boards/add": {
    "post": {
         "tags": ["Boards"], 
        "summary": "Add board to user",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [{ "Bearer": [] }],
                "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBoardResponse"
              }
            }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/boards/{boardId}": {
    "patch": {
         "tags": ["Boards"],
        "summary": "Update board fields",
        "parameters": [
           { "name": "boardId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "description": "Authorization token must be included",
        "security": [{ "Bearer": [] }],
                "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBoardResponse"
              }
            }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "delete": {
         "tags": ["Boards"],
        "summary": "Remove board",
        "parameters": [
           { "name": "boardId",
            "required": true,
            "in": "path",
            "type": "string"
          }
        ],
        "description": "Authorization token must be included",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Board deleted",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  

  
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name","email", "password"],
        "properties": {
        "name": {
            "type": "string",
            "description": "User's name",
            "example": "Myname"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "example": "example@gmail.com",
              "format": "email"
            },
            "theme": {
              "type": "string",
              "description": "User's id",
              "example": "dark"
            },
            "avatarURL": {
              "type": "string",
              "description": "User's avatar",
              "example": "https://cloudinary.com/avatar.jpeg"
            }
          }
      },
        "LoginResponse": {
        "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTVkNjJlNjE4MzgwMzY4NTk0NDZjNCIsImlhdCI6MTY4NzYxMjMzMCwiZXhwIjoxNjg3Njk4NzMwfQ.Exk_soSUARn-t-7FDQKsiFBTutt_vc9ok9UPuTdGqBU"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "example": "example@gmail.com",
              "format": "email"
            },
            "theme": {
              "type": "string",
              "description": "User's theme",
              "example": "dark"
            },
            "avatarURL": {
              "type": "string",
              "description": "User's avatar",
              "example": "https://cloudinary.com/avatar.jpeg"
            }
          }
      },
        "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
        "CurrentUserResponse": {
        "type": "object",
      "required": ["email", "password"],
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "6497272b903f686ac6123cad"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "My name"
          },          
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "Avatar URL",
            "example": "https://cloudinary.com/avatar.jpeg"
          },
          "theme": {
              "type": "string",
              "description": "User's theme",
              "example": "dark"
            }
        }
      },
        "ThemeUserRequest": {
        "type": "object",
        "properties": {
          "theme": {
              "type": "string",
              "description": "User's theme",
              "example": "dark"
            }
        }
      },       
        "ThemeUserResponse": {
        "type": "object",
        "properties": {
          "theme": {
              "type": "string",
              "description": "User's theme",
              "example": "dark"
            },
          "message": {
            "type": "string",
            "description": "message",
            "example": "The theme has been changed. Now it's a dark theme"
          }
        }
      },
        "GetBoardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Board's id",
            "example": "6497272b903f686ac6123cad"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board title"
          },          
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "https://cloudinary.com/icon.svg"
          },
          "background": {
            "type": "string",
            "description": "background URL",
            "example": "https://cloudinary.com/background.jpeg"
          },
          "owner": {
              "type": "string",
              "description": "Owner`s id",
              "example": "6497272b903f686ac6123cad"
            }
          }
        }
      },
        "AddBoardRequest": {
          "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board title"
          }
          }
      },
        "AddBoardResponse": {
          "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Board's id",
            "example": "6497272b903f686ac6123cad"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board title"
          },          
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "https://cloudinary.com/icon.svg"
          },
          "background": {
            "type": "string",
            "description": "background URL",
            "example": "https://cloudinary.com/background.jpeg"
          },
          "owner": {
              "type": "string",
              "description": "Owner`s id",
              "example": "6496f88960259996ba1250a1"
            }
          }
      },
        "BoardRequest": {
          "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board title"
          },          
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "https://cloudinary.com/icon.svg"
          },
          "background": {
            "type": "string",
            "description": "background URL",
            "example": "https://cloudinary.com/background.jpeg"
          }
        }
      }
      
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}