{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Connections API",
    "description": "Connections API for request to backend taskPro",
    "license": {
      "name": "URL to repository",
      "url": "https://github.com/Midland707/task-pro-node-backend"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/RUS14JOB_1/test2/1.0.0"
    },
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/RUS14JOB_1/Test/1.0.0"
    },
    {
      "url": "https://task-pro-backend-j82b.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Boards",
      "description": "User boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Boards columns endpoints"
    },
    {
      "name": "Cards",
      "description": "Columns tasks endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "# Опис параметрів запиту:\n\n**username** - string, ім'я користувача.\n\n**email** - string, електронна пошта користувача. \n\n**password** - string, пароль користувача. \n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**New User Registered**\n\nОпис параметрів відповіді:\n\n**id** - ObjectId, унікальний ідентифікатор користувача\n\n**username** - string, ім'я користувача.\n\n**email** - string, електронна пошта користувача.\n\n**balance** - number, баланс користувача.\n\n**token** - string, токен\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**Successful operation**\n\nОпис параметрів відповіді:\n\n**id** - ObjectId, унікальний ідентифікатор користувача\n\n**username** - string, ім'я користувача.\n\n**email** - string, електронна пошта користувача.\n\n**balance** - number, баланс користувача.\n\n**token** - string, токен\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/users": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user info",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "# Опис параметрів запиту:\n\n**avatar** - string, фото користувача в форматі form-data.\n\n**name** - string, ім'я користувача.\n\n**email** - string, електронна пошта користувача. \n\n**password** - string, пароль користувача. \n",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user info",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/themes": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user`s theme",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/boards": {
      "get": {
        "tags": ["Boards"],
        "summary": "Getting user`s boards",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Boards"],
        "summary": "Add board to user",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/boards/{boardId}": {
      "get": {
        "tags": ["Boards"],
        "summary": "Getting user`s all colomns and cards",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Boards"],
        "summary": "Update board fields",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Remove board",
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Board deleted",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": null
          }
        }
      },
      "post": {
        "tags": ["Boards"],
        "summary": "Add board to user",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/columns": {
      "post": {
        "tags": ["Columns"],
        "summary": "Add column to board",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/columns/{columnId}": {
      "patch": {
        "tags": ["Columns"],
        "summary": "Update column`s fields",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Remove column",
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Column deleted",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/cards": {
      "post": {
        "tags": ["Cards"],
        "summary": "Add card to column",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/cards/{cardsId}": {
      "patch": {
        "tags": ["Cards"],
        "summary": "Update card`s fields",
        "parameters": [],
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Cards"],
        "summary": "Remove card",
        "description": "Authorization token must be included",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Card deleted",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": ["name", "email", "theme", "avatarURL"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Myname"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "theme": {
            "type": "string",
            "description": "User's id",
            "example": "dark"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": "https://cloudinary.com/avatar.jpeg"
          }
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Myname"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW7SxrjM"
          }
        },
        "required": ["user", "token"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTVkNjJlNjE4MzgwMzY4NTk0NDZjNCIsImlhdCI6MTY4NzYxMjMzMCwiZXhwIjoxNjg3Njk4NzMwfQ.Exk_soSUARn-t-7FDQKsiFBTutt_vc9ok9UPuTdGqBU"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "example": "dark"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": "https://cloudinary.com/avatar.jpeg"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "required": ["name", "email", "password", "avatar"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Myname"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "example": "avatar.jpeg"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "6497272b903f686ac6123cad"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "My name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "Avatar URL",
            "example": "https://cloudinary.com/avatar.jpeg"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "example": "dark"
          }
        }
      },
      "ThemeUserRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "example": "dark"
          }
        }
      },
      "ThemeUserResponse": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "example": "dark"
          },
          "message": {
            "type": "string",
            "description": "message",
            "example": "The theme has been changed. Now it's a dark theme"
          }
        }
      },
      "GetBoardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Board's id",
              "example": "6497272b903f686ac6123cad"
            },
            "title": {
              "type": "string",
              "description": "Board's title",
              "example": "Board title"
            },
            "icon": {
              "type": "string",
              "description": "Board's icon",
              "example": "https://cloudinary.com/icon.svg"
            },
            "background": {
              "type": "string",
              "description": "background URL",
              "example": "https://cloudinary.com/background.jpeg"
            },
            "owner": {
              "type": "string",
              "description": "Owner`s id",
              "example": "6497272b903f686ac6123cad"
            }
          }
        }
      },
      "BoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board title"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "https://cloudinary.com/icon.svg"
          },
          "background": {
            "type": "string",
            "description": "background URL",
            "example": "https://cloudinary.com/background.jpeg"
          }
        }
      },
      "AddBoardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Board's id",
            "example": "6497272b903f686ac6123cad"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board title"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "example": "https://cloudinary.com/icon.svg"
          },
          "background": {
            "type": "string",
            "description": "background URL",
            "example": "https://cloudinary.com/background.jpeg"
          },
          "owner": {
            "type": "string",
            "description": "Owner`s id",
            "example": "6496f88960259996ba1250a1"
          }
        }
      },
      "ColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Column's title",
            "example": "Column title"
          }
        }
      },
      "ColumnResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Board's id",
            "example": "6497272b903f686ac6123cad"
          },
          "title": {
            "type": "string",
            "description": "Board's title",
            "example": "Board title"
          },
          "owner": {
            "type": "string",
            "description": "Owner`s id",
            "example": "6496f88960259996ba1250a1"
          }
        }
      },
      "CardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Card title"
          },
          "description": {
            "type": "string",
            "description": "Card's description",
            "example": "Card description"
          },
          "label": {
            "type": "string",
            "description": "Card's label",
            "example": "without"
          },
          "deadline": {
            "type": "string",
            "description": "Card's deadline",
            "example": "time deadline"
          }
        }
      },
      "CardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Board's id",
            "example": "6497272b903f686ac6123cad"
          },
          "title": {
            "type": "string",
            "description": "Card's title",
            "example": "Card title"
          },
          "description": {
            "type": "string",
            "description": "Card's description",
            "example": "Card description"
          },
          "label": {
            "type": "string",
            "description": "Card's label",
            "example": "without"
          },
          "deadline": {
            "type": "string",
            "description": "Card's deadline",
            "example": "time deadline"
          },
          "owner": {
            "type": "string",
            "description": "Owner`s id",
            "example": "6496f88960259996ba1250a1"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
